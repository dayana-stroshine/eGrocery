{"version":3,"sources":["./src/app/shared/resolver/recipe.resolver.ts","./src/app/shared/resolver/event.resolver.ts","./src/app/kitchen/kitchen.component.ts","./src/app/kitchen/kitchen.component.html","./src/app/shared/models/recipe.model.ts","./src/app/shared/services/meal.service.ts","./src/app/shared/services/event.service.ts","./src/app/calendar/calendar.component.ts","./src/app/calendar/calendar.component.html","./src/environments/environment.ts","./src/app/shared/services/kitchen.service.ts","./src/app/shared/models/meal.model.ts","./src/app/shared/resolver/kitchen.resolver.ts","./src/app/shared/services/recipe-ingredients.service.ts","./src/app/shared/services/auth.service.ts","./src/app/shared/resolver/recipe-item.resolver.ts","./src/app/recipes/recipe-item-add/recipe-item-add.component.ts","./src/app/recipes/recipe-item-add/recipe-item-add.component.html","./src/app/homepage/homepage.component.ts","./src/app/homepage/homepage.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/recipes/recipe-item-edit/recipe-item-edit.component.ts","./src/app/recipes/recipe-item-edit/recipe-item-edit.component.html","./src/app/app.module.ts","./src/app/shared/services/ingredient.service.ts","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/app/recipes/recipes.component.ts","./src/app/recipes/recipes.component.html","./src/app/shared/services/error-handler.service.ts","./src/app/signup/signup.component.ts","./src/app/signup/signup.component.html","./src/app/shared/services/recipe.service.ts","./src/app/shared/models/ingredient.model.ts","./src/app/app-routing.module.ts","./src/app/recipes/recipe-item/recipe-item.component.ts","./src/app/recipes/recipe-item/recipe-item.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\n\nimport { Observable } from 'rxjs';\nimport { RecipeHttpService } from '../services/recipe.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RecipeResolver implements Resolve<Observable<string>> {\n\n  constructor(private recipeHttpService: RecipeHttpService) { }\n\n  resolve() {\n    const userId = 10; // could be replaced with a user service that has current user\n    return this.recipeHttpService.getAll(userId);\n  }\n}","import { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\n\nimport { Observable } from 'rxjs';\nimport { EventService } from '../services/event.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EventResolver implements Resolve<Observable<string>> {\n\n  constructor(private eventService: EventService) { }\n\n  resolve() {\n    const userId = 10; // could be replaced with a user service that has current user\n    return this.eventService.getAll(userId);\n  }\n}","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Ingredient } from '../shared/models/ingredient.model';\n\nimport { KitchenService } from '../shared/services/kitchen.service';\n\n@Component({\n  selector: 'app-kitchen',\n  templateUrl: './kitchen.component.html',\n  styleUrls: ['./kitchen.component.css']\n})\nexport class KitchenComponent implements OnInit {\n  allIngredients: any;\n  categories: string[];\n  selectedCategoryIngredients: Ingredient[];\n  selectedCategory: string;\n  searchQuery: string = '';\n  searchResult: string;\n\n  constructor(\n    private activeRoute: ActivatedRoute,\n    private kitchenService: KitchenService\n  ) { }\n\n  ngOnInit(): void {\n    this.allIngredients = this.activeRoute.snapshot.data.message[0];\n    this.kitchenService.populateKitchen(this.allIngredients.slice());\n    this.categories =[ ...this.kitchenService.currentKitchen.keys() ];\n    this.selectedCategory = this.categories[0];\n    this.selectedCategoryIngredients = this.kitchenService.currentKitchen.get(this.categories[0]).slice();\n  }\n\n  onSelect(category: string) {\n    this.selectedCategory = category;\n    this.selectedCategoryIngredients = this.kitchenService.currentKitchen.get(category).slice();\n  }\n\n  onSearch() {\n    this.searchResult = '';\n    \n    for (const categoryKey of this.kitchenService.currentKitchen.keys()) {\n      const ingredients = this.kitchenService.currentKitchen.get(categoryKey).slice();\n      for (const ingredient of ingredients) {\n        if (ingredient.name.includes(this.searchQuery)) {\n          this.selectedCategory = categoryKey;\n          this.selectedCategoryIngredients = ingredients.slice();\n          return;\n        }\n      }\n    }\n\n    this.searchResult = 'Nothing matches search query!';\n    return;\n  }\n}\n","<div class=\"jumbotron bg-keylime\">\n  <h1>My Kitchen Ingredients</h1>\n</div>\n\n<div class=\"row\">\n  <div class=\"col-md-8\">\n    <input type=\"text\" class=\"form-control\" [(ngModel)]=\"searchQuery\" placeholder=\"Search for an ingredient\">\n  </div>\n  <div class=\"col-md-4\">\n    <button class=\"btn btn-primary\" (click)=\"onSearch()\">\n        Search\n    </button>\n  </div>\n</div>\n\n<br>\n\n<p style=\"color: red\">{{ searchResult }}</p>\n\n<br>\n\n<div class=\"row\">\n  <div class=\"col-md-5\">\n    <ul class=\"nav nav-pills nav-stacked\">\n      <li \n        role=\"presentation\" \n        *ngFor=\"let category of categories\" \n        (click)=\"onSelect(category)\" \n        [ngClass]=\"{'active':category === selectedCategory}\"\n        style=\"cursor: pointer\">\n          <a>{{ category.charAt(0).toUpperCase() + category.slice(1).toLowerCase() }}</a>\n        </li>\n    </ul>\n  </div>\n  <div class=\"col-md-7\">\n    <ul class=\"list-group\">\n      <li *ngFor=\"let ingredient of selectedCategoryIngredients\" class=\"list-group-item\">{{ ingredient.name }}</li>\n    </ul>\n  </div>\n</div>","import { Ingredient } from \"./ingredient.model\";\n\nexport class Recipe {\n  public name: string;\n  public category: string;\n  public ingredients: Ingredient[];\n  public directions: string;\n  public rating: number;\n  public recipeId: number;\n\n  constructor(name: string, category: string, ingredients: Ingredient[], directions: string, rating: number, recipeId: number) {\n    this.name = name;\n    this.category = category;\n    this.ingredients = ingredients;\n    this.directions = directions;\n    this.rating = rating;\n    this.recipeId = recipeId;\n  }\n}","import { Injectable } from '@angular/core';\n\nimport { Meal } from '../models/meal.model';\n\n@Injectable({providedIn: 'root'})\nexport class MealService {\n  meals: Meal[] = [\n    new Meal(\n      'Breakfast',\n      []\n    ),\n    new Meal(\n      'Lunch',\n      []\n    ),\n    new Meal(\n      'Dinner',\n      []\n    ),\n    new Meal(\n      'Dessert',\n      []\n    )\n  ];\n\n  mealSelected: Meal = this.meals[0];\n\n  constructor() { }\n\n  getMeals() {\n    return this.meals.slice();\n  }\n\n  resetMeals() {\n    this.meals =[\n      new Meal(\n        'Breakfast',\n        []\n      ),\n      new Meal(\n        'Lunch',\n        []\n      ),\n      new Meal(\n        'Dinner',\n        []\n      ),\n      new Meal(\n        'Dessert',\n        []\n      )\n    ];\n  }\n}\n\n\n/*\n\nimport { EventEmitter, Injectable } from '@angular/core';\n\nimport { Recipe } from './recipe.model';\nimport { Ingredient } from '../shared/ingredient.model';\nimport { ShoppingListService } from '../shopping-list/shopping-list.service';\n\n@Injectable()\nexport class RecipeService {\n  recipeSelected = new EventEmitter<Recipe>();\n\n  private recipes: Recipe[] = [\n    new Recipe(\n      'Tasty Schnitzel',\n      'A super-tasty Schnitzel - just awesome!',\n      'https://upload.wikimedia.org/wikipedia/commons/7/72/Schnitzel.JPG',\n      [\n        new Ingredient('Meat', 1),\n        new Ingredient('French Fries', 20)\n      ]),\n    new Recipe('Big Fat Burger',\n      'What else you need to say?',\n      'https://upload.wikimedia.org/wikipedia/commons/b/be/Burger_King_Angus_Bacon_%26_Cheese_Steak_Burger.jpg',\n      [\n        new Ingredient('Buns', 2),\n        new Ingredient('Meat', 1)\n      ])\n  ];\n\n  constructor(private slService: ShoppingListService) {}\n\n  getRecipes() {\n    return this.recipes.slice();\n  }\n\n  getRecipe(index: number) {\n    return this.recipes[index];\n  }\n\n  addIngredientsToShoppingList(ingredients: Ingredient[]) {\n    this.slService.addIngredients(ingredients);\n  }\n}\n\n*/","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from \"@angular/core\";\nimport { Observable } from 'rxjs';\nimport { catchError, first } from 'rxjs/operators';\n\nimport { environment } from 'src/environments/environment';\nimport { ErrorHandlerService } from './error-handler.service';\nimport { Event } from '../models/event.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EventService {\n  daySelected: Event;\n  currentCalendar: Map<string, string[]>;\n  private url = `${environment.baseUrl}api/event`;\n\n  httpOptions: { headers: HttpHeaders } = {\n    headers: new HttpHeaders({ \"Content-Type\": \"application/json\" })\n  };\n\n  constructor(\n    private http: HttpClient,\n    private errorHandlerService: ErrorHandlerService\n  ) { }\n\n  getAll(userId: number): Observable<any> {\n    return this.http.get<any>(`${this.url}/${userId}`, this.httpOptions)\n      .pipe(\n        first(),\n        catchError(this.errorHandlerService.handleError<any>('getAll'))\n      );\n  }\n\n  addEventRecipe(recipe_id: number, user_id: number, day: string) {\n    const reqBody = {\n      recipe_id,\n      user_id,\n      day\n    }\n    return this.http.post<any>(`${this.url}/addEventRecipe`, reqBody, this.httpOptions)\n      .pipe(\n        first(),\n        catchError(this.errorHandlerService.handleError<any>('addEventRecipe'))\n      );\n  }\n\n  populateCalendar(allEventRecipes: Event[]) {\n    this.currentCalendar = new Map();\n\n    for (const eventRecipe of allEventRecipes) {\n      const day: string = eventRecipe.date.toLowerCase();\n\n      if (this.currentCalendar.has(day)) {\n        const tempRecipeList: string[] = this.currentCalendar.get(day).slice();\n        tempRecipeList.push(eventRecipe.recipe_name);\n        this.currentCalendar.set(day, tempRecipeList.slice());\n      } else {\n        const newRecipeList = [eventRecipe.recipe_name];\n        this.currentCalendar.set(day, newRecipeList.slice());\n      }\n    }\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { EventService } from '../shared/services/event.service';\nimport { Event } from '../shared/models/event.model'\n\n@Component({\n  selector: 'app-calendar',\n  templateUrl: './calendar.component.html',\n  styleUrls: ['./calendar.component.css']\n})\nexport class CalendarComponent implements OnInit {\n  allEventRecipes: Event[];\n  daysOfWeek: string[] = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n  availableDays: string[] = [];\n  selectedDayRecipes: string[];\n  selectedDay: string;\n\n  constructor(\n    private activeRoute: ActivatedRoute,\n    private eventService: EventService\n  ) { }\n\n  ngOnInit(): void {\n    this.allEventRecipes = this.activeRoute.snapshot.data.message[0];\n    this.eventService.populateCalendar(this.allEventRecipes);\n\n    for (const day of this.daysOfWeek) {\n      if (this.eventService.currentCalendar.has(day.toLowerCase())) {\n        this.availableDays.push(day);\n      }\n    }\n\n    if (this.availableDays) {\n      this.selectedDay = this.availableDays[0];\n      this.selectedDayRecipes = this.eventService.currentCalendar.get(this.selectedDay.toLowerCase()).slice();\n    }\n  }\n\n  onSelect(day: string) {\n    this.selectedDay = day;\n    this.selectedDayRecipes = this.eventService.currentCalendar.get(day.toLowerCase()).slice();\n  }\n}\n","<div class=\"jumbotron bg-keylime\">\n  <h1>My Recipe Calendar</h1>\n</div>\n\n<div class=\"row\">\n  <div class=\"col-md-5\">\n    <ul class=\"nav nav-pills nav-stacked\">\n      <li \n        role=\"presentation\" \n        *ngFor=\"let day of availableDays\" \n        (click)=\"onSelect(day)\" \n        [ngClass]=\"{'active':day === selectedDay}\"\n        style=\"cursor: pointer\">\n          <a>{{ day }}</a>\n        </li>\n    </ul>\n  </div>\n  <div class=\"col-md-7\">\n    <ul class=\"list-group\">\n      <li *ngFor=\"let recipe of selectedDayRecipes\" class=\"list-group-item\">{{ recipe }}</li>\n    </ul>\n  </div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  baseUrl: \"http://localhost:4100/\"\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from \"@angular/core\";\nimport { Observable } from 'rxjs';\nimport { catchError, first } from 'rxjs/operators';\n\nimport { environment } from 'src/environments/environment';\nimport { Ingredient } from '../models/ingredient.model';\nimport { ErrorHandlerService } from './error-handler.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class KitchenService {\n  ingredientSelected: Ingredient;\n  currentKitchen: Map<string, Ingredient[]>;\n  private url = `${environment.baseUrl}api/kitchen`;\n\n  httpOptions: { headers: HttpHeaders } = {\n    headers: new HttpHeaders({ \"Content-Type\": \"application/json\" })\n  };\n\n  constructor(\n    private http: HttpClient,\n    private errorHandlerService: ErrorHandlerService\n  ) { }\n\n  getAll(userId: number): Observable<any> {\n    return this.http.get<any>(`${this.url}/${userId}`, this.httpOptions)\n      .pipe(\n        first(),\n        catchError(this.errorHandlerService.handleError<any>('getAll'))\n      );\n  }\n\n  populateKitchen(allIngredients: any[]) {\n    this.currentKitchen = new Map();\n\n    for (const currentIngredient of allIngredients) {\n      const currentCategory: string = currentIngredient.category;\n\n      if (this.currentKitchen.has(currentCategory)) {\n        const tempIngredientList: Ingredient[] = this.currentKitchen.get(currentCategory).slice();\n\n        tempIngredientList.push(\n          new Ingredient(\n            currentIngredient.ingredient_id,\n            currentIngredient.ingredient_name,\n            currentIngredient.quantity,\n            currentIngredient.unit,\n            currentIngredient.category\n          )\n        );\n\n        this.currentKitchen.set(currentCategory, tempIngredientList.slice());\n      } else {\n        const newIngredientList: Ingredient[] = [\n          new Ingredient(\n            currentIngredient.ingredient_id,\n            currentIngredient.ingredient_name,\n            currentIngredient.quantity,\n            currentIngredient.unit,\n            currentIngredient.category\n          )\n        ];\n        this.currentKitchen.set(currentCategory, newIngredientList.slice());\n      }\n    }\n  }\n}","import { Recipe } from './recipe.model';\n\nexport class Meal {\n  public name: string;\n  public recipes: Recipe[];\n\n  constructor(name: string, recipes: Recipe[]) {\n    this.name = name;\n    this.recipes = recipes;\n  }\n}","import { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\n\nimport { Observable } from 'rxjs';\nimport { KitchenService } from '../services/kitchen.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class KitchenResolver implements Resolve<Observable<string>> {\n\n  constructor(private kitchenService: KitchenService) { }\n\n  resolve() {\n    const userId = 10; // could be replaced with a user service that has current user\n    return this.kitchenService.getAll(userId);\n  }\n}","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { ErrorHandlerService } from './error-handler.service';\n\nimport { RecipeIngredient } from '../models/RecipeIngredient'\nimport { Observable } from 'rxjs';\n// no need to async or unsubscribe with first\nimport { catchError, first } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RecipeIngredientHttpService {\n\n  private url = environment.baseUrl + \"api/recipeIngredient/\";\n\n  httpOptions: { headers: HttpHeaders } = {\n    headers: new HttpHeaders({ \"Content-Type\": \"application/json\" })\n  };\n\n  constructor(private http: HttpClient,\n    private errorHandlerService: ErrorHandlerService) { }\n\n    addRIRelation(recipeIngredient: RecipeIngredient): Observable<RecipeIngredient> {\n      return this.http.post<RecipeIngredient>(`${this.url}`, recipeIngredient, this.httpOptions)\n        .pipe(\n          first(),\n          catchError(this.errorHandlerService.handleError<RecipeIngredient>('addRIRelation'))\n        );\n    }\n\n    deleteRIRelation(recipeId: number, ingredientId:number): Observable<any> {\n      return this.http.delete<any>(`${this.url}/${recipeId}/${ingredientId}`, this.httpOptions)\n      .pipe(\n        first(),\n        catchError(this.errorHandlerService.handleError<any>('deleteRIRelation'))\n      )\n    }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n\nimport { environment } from '../../../environments/environment';\nimport { Observable } from \"rxjs\";\n// Gives back first response without unsubscribing.\nimport { first, catchError } from \"rxjs/operators\";\n\nimport { User } from '../models/User';\nimport { ErrorHandlerService } from './error-handler.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private url = environment.baseUrl + \"api/auth/signup\";\n  // private url = \"http://localhost:4100/api/auth/signup\";\n\n  httpOptions: { headers: HttpHeaders } = {\n    headers: new HttpHeaders({ \"Content-Type\": \"application/json\"}),\n  };\n\n  constructor(\n    private http: HttpClient,\n    private errorHandlerService: ErrorHandlerService\n  ) {}\n\n  signup(user: Omit<User, \"id\">): Observable<User>{\n    return this.http\n    .post<User>(this.url, user, this.httpOptions)\n    .pipe(\n      first(),\n      catchError(this.errorHandlerService.handleError<User>(\"signup\"))\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\n\nimport { Observable } from 'rxjs';\nimport { RecipeHttpService } from '../services/recipe.service';\n\n@Injectable({ providedIn: 'root' })\nexport class RecipeItemResolver implements Resolve<Observable<string>> {\n\n  constructor(\n    private recipeHttpService: RecipeHttpService) { }\n\n  resolve(route: ActivatedRouteSnapshot) {\n    // Get the recipeId from recipe service to make the API call\n    // const recipeId =this.recipeService.recipeSelected.recipeId; \n\n    // Get the recipeId from the route params\n    return this.recipeHttpService.getOne(+route.paramMap.get('id'));\n\n  }\n}","import { Component, OnInit } from '@angular/core';\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\n\nimport { IngredientHttpService } from '../../shared/services/ingredient.service';\nimport { RecipeHttpService } from '../../shared/services/recipe.service'\nimport { RecipeIngredientHttpService } from '../../shared/services/recipe-ingredients.service'\nimport { Recipe } from '../../shared/models/recipe.model';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-recipe-item-add',\n  templateUrl: './recipe-item-add.component.html',\n  styleUrls: ['./recipe-item-add.component.css']\n})\nexport class RecipeItemAddComponent implements OnInit {\n  recipeId: number;\n  newRecipe: Recipe;\n  public recipeForm: FormGroup;\n  public IngredientList: FormArray;\n\n\n  get ingredientFormGroup() {\n    return this.recipeForm.get('ingredients') as FormArray;\n  }\n\n  // get the formgroup under ingredients form array\n  getIngredientFormGroup(index): FormGroup {\n    // this.IngredientList = this.form.get('ingredients') as FormArray;\n    const formGroup = this.IngredientList.controls[index] as FormGroup;\n    return formGroup;\n  }\n\n  constructor(\n    private router: Router,\n    private recipeHttpService: RecipeHttpService,\n    private ingredientHttpService: IngredientHttpService,\n    private recipeIngredientHttpService: RecipeIngredientHttpService,\n    private fb: FormBuilder) { }\n\n  ngOnInit(): void {\n    this.newRecipe = this.recipeHttpService.recipeSelected;\n    // this.recipeForm = this.createFormGroup();\n    this.recipeForm = this.fb.group({\n      recipeName: ['', Validators.compose([Validators.required])],\n      recipeCategory: [''],\n      ingredients: this.fb.array([this.createIngredient()]),\n      directions: ['']\n    });\n\n    this.IngredientList = this.recipeForm.get('ingredients') as FormArray;\n\n  }\n\n  // ingredient formgroup\n  createIngredient(): FormGroup {\n    return this.fb.group({\n      quantity: [null],\n      unit: [null],\n      name: [null],\n      category: [null]\n    });\n  }\n\n  // add ingredient from group\n  addIngredient() {\n    this.IngredientList.push(this.createIngredient());\n  }\n\n  // remove ingredient from group\n  removeIngredient(index) {\n    this.IngredientList.removeAt(index);\n  }\n\n  // Helper function for submitting an ingredient\n  submitIngredients(recipeId: number) {\n      // Add Ingredients \n      let ingredientId:number;\n\n      this.IngredientList.controls.forEach((element, index) => {\n        this.ingredientHttpService.addIngredient(element.value).subscribe(result => {\n          ingredientId = result[0].insertId;\n          this.submitRelation(recipeId, ingredientId);\n        })\n      })\n  } \n\n  // Helper function for submitting to Recipes_Ingredients table that relates an ingredient to a recipe\n  submitRelation(recipeId: number, ingredientId: number){\n    const recipeIngredient = {\n      recipe_id : recipeId,\n      ingredient_id : ingredientId\n    }\n    this.recipeIngredientHttpService.addRIRelation(recipeIngredient).subscribe(msg => console.log(msg));\n    this.router.navigate(['/recipes']);\n  }\n\n  // Makes an Http call\n  submit(): void {\n    // addRecipe\n    this.recipeHttpService.addRecipe(this.recipeForm.value).subscribe(results => {\n      this.recipeId = results[0].insertId;\n\n      this.submitIngredients(results[0].insertId);\n    });\n    \n  }\n}\n\n\n","<div class=\"jumbotron bg-keylime\" style=\"margin-bottom: 0;\">\n    <h1>Add Recipe</h1>\n</div>\n\n<form [formGroup]=\"recipeForm\" (submit)=\"submit()\">\n    <div class=\"form-group\">\n        <label for=\"inputRecipeName\">\n            <h2>Recipe Name</h2>\n        </label>\n        <input type=\"text\" class=\"form-control\" id=\"inputRecipeName\" formControlName=\"recipeName\">\n    </div>\n    <div class=\"form-group\">\n        <label for=\"inputRecipeCategory\">\n            <h3>Category</h3>\n        </label>\n        <input type=\"text\" class=\"form-control\" id=\"inputRecipeCategory\" formControlName=\"recipeCategory\">\n    </div>\n    <h2>Ingredients</h2>\n    <button type=\"button\" class=\"btn btn-secondary  button-mrgn\" (click)=\"addIngredient();\">\n        <span class=\"glyphicon glyphicon-plus\" aria-hidden=\"true\"></span> Add Ingredient\n    </button>\n    <div class=\"form-row\">\n        <div class=\"form-group col-md-2\">\n            <label>Quantity</label>\n        </div>\n        <div class=\"form-group col-md-2\">\n            <label>Unit</label>\n        </div>\n        <div class=\"form-group col-md-4\">\n            <label>Ingredient Name</label>\n        </div>\n        <div class=\"form-group col-md-2\">\n            <label>Category</label>\n        </div>\n        <div class=\"form-group col-md-2\">\n            <label>Delete?</label>\n        </div>\n    </div>\n    <div formArrayName=\"ingredients\">\n        <div *ngFor=\"let ingredient of ingredientFormGroup.controls; let i = index;\">\n            <div class=\"form-row\" [formGroupName]=\"i\">\n                <div class=\"form-group col-md-2\">\n                    <input type=\"text\" class=\"form-control\" formControlName=\"quantity\">\n                </div>\n                <div class=\"form-group col-md-2\">\n                    <input type=\"text\" class=\"form-control\" formControlName=\"unit\">\n                </div>\n                <div class=\"form-group col-md-4\">\n                    <input type=\"text\" class=\"form-control\" formControlName=\"name\">\n                </div>\n                <div class=\"form-group col-md-2\">\n                    <input type=\"text\" class=\"form-control\" formControlName=\"category\">\n                </div>\n                <div class=\"form-group col-md-2\">\n                    <button type=\"button\" class=\"btn btn-secondary\" (click)=\"removeIngredient(i)\">\n                        <span class=\"glyphicon glyphicon-trash\" aria-hidden=\"true\"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n    </div>\n    <hr>\n    <h2>Directions</h2>\n    <div class=\"form-row\">\n        <div class=\"form-group\">\n            <textarea class=\"form-control\" formControlName=\"directions\" id=\"inputDirections\" rows=\"3\"></textarea>\n        </div>\n    </div>\n    <div class=\"form-row\">\n        <button type=\"submit\" class=\"btn btn-success btn-lg button-mrgn\" style=\"margin-left: 0;\">\n            Submit\n        </button>\n        <a routerLink=\"/recipes\">\n            <button type=\"button\" class=\"btn btn-secondary btn-lg button-mrgn\">\n                Cancel\n            </button>\n        </a>\n    </div>\n</form>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-homepage',\n  templateUrl: './homepage.component.html',\n  styleUrls: ['./homepage.component.css']\n})\nexport class HomepageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"jumbotron bg-keylime\">\n  <h1>eGrocery</h1>\n  <p>The all-in-one recipe organizer is here.</p>\n  <p><a class=\"btn btn-success btn-lg\" routerLink=\"/signup\" role=\"button\">Get Started</a></p>\n</div>\n\n<div class=\"row\">\n  <div class=\"col-sm-6 col-md-4\">\n    <div class=\"thumbnail no-border\">\n      <a routerLink=\"/recipes\">\n        <img src=\"assets/images/recipes.svg\" alt=\"recipes\">\n      </a>\n    </div>\n  </div>\n  <div class=\"col-sm-6 col-md-4\">\n    <div class=\"thumbnail no-border\">\n      <a routerLink=\"/kitchen\">\n        <img src=\"assets/images/kitchen.svg\" alt=\"kitchen\">\n      </a>\n    </div>\n  </div>\n  <div class=\"col-sm-6 col-md-4\">\n    <div class=\"thumbnail no-border\">\n      <a routerLink=\"/calendar\">\n        <img src=\"assets/images/calendar.svg\" alt=\"calendar\">\n      </a>\n    </div>\n  </div>\n</div>\n<div class=\"row mrgn-bottom\">\n  <div class=\"col-sm-6 col-md-4\">\n    <div class=\"caption\">\n      <h3>Recipe Storage</h3>\n      <p>Store your recipes in one place to make organizing, searching, and updating easy.</p>\n    </div>\n  </div>\n  <div class=\"col-sm-6 col-md-4\">\n    <div class=\"caption\">\n      <h3>Kitchen Inventory</h3>\n      <p>Keep track of what ingredients to make finding what you need to buy for a recipe simple.</p>\n    </div>\n  </div>\n  <div class=\"col-sm-6 col-md-4\">\n    <div class=\"caption\">\n      <h3>Calendar</h3>\n      <p>Plan when you will make recipes using the calendar.</p>\n    </div>\n  </div>\n</div>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'eGrocery';\n}\n","<app-header></app-header>\n<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-md-12\">\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormArray, FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\n\nimport { IngredientHttpService } from '../../shared/services/ingredient.service';\nimport { Recipe } from '../../shared/models/recipe.model';\nimport { Ingredient } from '../../shared/models/ingredient.model';\nimport { RecipeHttpService } from 'src/app/shared/services/recipe.service';\nimport { RecipeIngredientHttpService } from 'src/app/shared/services/recipe-ingredients.service';\n\n@Component({\n  selector: 'app-recipe-item-edit',\n  templateUrl: './recipe-item-edit.component.html',\n  styleUrls: ['./recipe-item-edit.component.css']\n})\n\nexport class RecipeItemEditComponent implements OnInit {\n  thisRecipe: Recipe;\n  public recipeForm: FormGroup;\n  public IngredientList: FormArray;\n  public id: number;\n\n  get ingredientFormGroup() {\n    return this.recipeForm.get('ingredients') as FormArray;\n  }\n\n  // get the formgroup under contacts form array\n  getIngredientFormGroup(index): FormGroup {\n    // this.IngredientList = this.form.get('ingredients') as FormArray;\n    const formGroup = this.IngredientList.controls[index] as FormGroup;\n    return formGroup;\n  }\n\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    private recipeHttpService: RecipeHttpService,\n    private ingredientHttpService: IngredientHttpService,\n    private recipeIngredientHttpService: RecipeIngredientHttpService,\n\n    private fb: FormBuilder) { }\n\n  ngOnInit(): void {\n\n    // this.thisRecipe = this.recipeHttpService.recipeSelected;\n    // this.recipeForm = this.createFormGroup();\n    this.recipeForm = this.fb.group({\n      recipeName: ['', Validators.compose([Validators.required])],\n      recipeCategory: [''],\n      ingredients: this.fb.array([this.createIngredient()]),\n      directions: ['']\n    });\n\n    this.IngredientList = this.recipeForm.get('ingredients') as FormArray;\n\n    this.id = +this.route.snapshot.paramMap.get('id');\n\n    // Start of chain of events that gets the recipe based on the param id\n    this.route.paramMap.subscribe(params => {\n      const recipeId = +params.get('id');\n      if (recipeId) {\n        this.getRecipe(this.route);\n      }\n    })\n\n  }\n  // Next step in the chain will get the recipe and then append it to the form\n  getRecipe(route: ActivatedRoute) {\n    this.thisRecipe = this.formatRecipeItem(this.route.snapshot.data.message[0]);\n    if (this.thisRecipe) {\n      this.editRecipe(this.thisRecipe);\n    }\n  }\n\n  editRecipe(recipe) {\n    this.recipeForm.patchValue({\n      recipeName: recipe.recipe_name,\n      recipeCategory: recipe.category,\n      directions: recipe.instruction\n    });\n    this.recipeForm.setControl('ingredients', this.setExistingIngredients(recipe.ingredients))\n  }\n\n  // bind ingredient form array data to ingredients\n  editIngredient(recipe: Recipe) {\n    this.recipeForm.setControl('ingredients', this.setExistingIngredients(recipe.ingredients));\n  }\n  // setExistingIngredients(ingredientSets: Ingredient[]): FormArray {\n  setExistingIngredients(ingredientSets): FormArray {\n    const formArray = new FormArray([]);\n    ingredientSets.forEach(ingrd => {\n      formArray.push(this.fb.group({\n        quantity: ingrd.quantity,\n        unit: ingrd.unit,\n        name: ingrd.ingredient_name,\n        category: ingrd.category,\n        id: ingrd.ingredient_id,\n      }));\n    });\n    return formArray;\n  }\n\n  // ingredient formgroup\n  createIngredient(): FormGroup {\n    return this.fb.group({\n      quantity: [null],\n      unit: [null],\n      name: [null],\n      category: [null],\n      id: [null]\n    });\n  }\n\n  // add ingredient from group\n  addIngredient() {\n    (<FormArray>this.recipeForm.get('ingredients')).push(this.createIngredient());\n  }\n\n  // remove ingredient from group\n  removeIngredient(index) {\n    let ingredients = this.recipeForm.get('ingredients').value;\n    (<FormArray>this.recipeForm.get('ingredients')).removeAt(index);\n    this.ingredientHttpService.deleteIngredient(ingredients[index].id).subscribe((msg => console.log(msg)))\n  }\n\n  // Makes an Http call\n  submit(): void {\n    // get recipe and ingredients\n    const ingredientArray = this.recipeForm.value.ingredients;\n    const recipeUpdate = {\n      name: this.recipeForm.value.recipeName,\n      category: this.recipeForm.value.recipeCategory,\n      ingredients: [],\n      directions: this.recipeForm.value.directions,\n      rating: this.thisRecipe.rating, //FIX ME: include rating from form\n      recipeId: this.id,\n    }\n\n    // update recipe\n    this.recipeHttpService.update(recipeUpdate).subscribe((msg) => console.log(msg));\n\n    let ingredientId: number;\n    // loop through ingredients returned from form,\n    // if they have an ingredient id, update them\n    // else, add them to the recipe\n    ingredientArray.forEach((element, index) => {\n      if (element.id != null) {\n        //update\n        this.ingredientHttpService.updateIngredient(element).subscribe((msg => console.log(msg)))\n      } else if (element.name) {\n        // add new ingredient and recipe/ingredient relation\n        this.ingredientHttpService.addIngredient(element).subscribe(result => {\n          ingredientId = result[0].insertId;\n          this.submitRelation(this.id, ingredientId);\n        })\n      }\n    })\n    setTimeout(() => this.router.navigate(['/recipe-item', this.id]), 1000);\n  }\n\n  // Helper function for submitting to Recipes_Ingredients table that relates an ingredient to a recipe\n  submitRelation(recipeId: number, ingredientId: number) {\n    const recipeIngredient = {\n      recipe_id: recipeId,\n      ingredient_id: ingredientId\n    }\n    this.recipeIngredientHttpService.addRIRelation(recipeIngredient).subscribe(msg => console.log(msg));\n  }\n\n  removeRecipe() {\n    let ingredients = this.recipeForm.get('ingredients').value;\n    // Delete ingredients\n    ingredients.forEach(ingredient => {\n      this.ingredientHttpService.deleteIngredient(ingredient.id).subscribe((msg => console.log(msg)))\n    });\n    // Delete recipe\n    this.recipeHttpService.delete(this.id).subscribe((msg => console.log(msg)));\n    this.router.navigate(['/recipes']);\n  }\n\n  // Upon completion of GET call to API, the results are formatted so the page may be displayed\n  formatRecipeItem(recipeItem) {\n    if (recipeItem) {\n      return recipeItem.reduce((recipe, curr) => {\n        const newIngredient = {\n          ingredient_id: curr.ingredient_id,\n          ingredient_name: curr.ingredient_name,\n          category: curr.category,\n          quantity: curr.quantity,\n          unit: curr.unit,\n        }\n        recipe.ingredients.push(newIngredient);\n        return recipe;\n      }, {\n        recipe_id: recipeItem[0].recipe_id,\n        recipe_name: recipeItem[0].recipe_name,\n        satisfaction: recipeItem[0].satisfaction,\n        category: recipeItem[0].recipe_category,\n        instruction: recipeItem[0].instruction,\n        user_id: recipeItem[0].user_id,\n        ingredients: []\n      })\n    }\n  }\n}","<div class=\"jumbotron bg-keylime\" style=\"margin-bottom: 0;\">\n    <h1>Edit Recipe</h1>\n</div>\n\n\n<form [formGroup]=\"recipeForm\" (submit)=\"submit()\">\n    <div class=\"form-group\">\n        <label for=\"inputRecipeName\">\n            <h2>Recipe Name</h2>\n        </label>\n        <input type=\"text\" class=\"form-control\" id=\"inputRecipeName\" formControlName=\"recipeName\">\n    </div>\n    <div class=\"form-group\">\n        <label for=\"inputRecipeCategory\">\n            <h3>Category</h3>\n        </label>\n        <input type=\"text\" class=\"form-control\" id=\"inputRecipeCategory\" formControlName=\"recipeCategory\">\n    </div>\n    <h2>Ingredients</h2>\n    <button type=\"button\" class=\"btn btn-secondary  button-mrgn\" (click)=\"addIngredient();\">\n        <span class=\"glyphicon glyphicon-plus\" aria-hidden=\"true\"></span> Add Ingredient\n    </button>\n    <div class=\"form-row\">\n        <div class=\"form-group col-md-2\">\n            <label>Quantity</label>\n        </div>\n        <div class=\"form-group col-md-2\">\n            <label>Unit</label>\n        </div>\n        <div class=\"form-group col-md-4\">\n            <label>Ingredient Name</label>\n        </div>\n        <div class=\"form-group col-md-2\">\n            <label>Category</label>\n        </div>\n        <div class=\"form-group col-md-2\">\n            <label>Delete?</label>\n        </div>\n    </div>\n    <div formArrayName=\"ingredients\">\n        <div *ngFor=\"let ingredient of ingredientFormGroup.controls; let i = index;\">\n            <div class=\"form-row\" [formGroupName]=\"i\">\n                <div class=\"form-group col-md-2\">\n                    <input type=\"text\" class=\"form-control\" formControlName=\"quantity\">\n                </div>\n                <div class=\"form-group col-md-2\">\n                    <input type=\"text\" class=\"form-control\" formControlName=\"unit\">\n                </div>\n                <div class=\"form-group col-md-4\">\n                    <input type=\"text\" class=\"form-control\" formControlName=\"name\">\n                </div>\n                <div class=\"form-group col-md-2\">\n                    <input type=\"text\" class=\"form-control\" formControlName=\"category\">\n                </div>\n                <input type=\"hidden\" class=\"form-control\" formControlName=\"id\">\n                <div class=\"form-group col-md-2\">\n                    <button type=\"button\" class=\"btn btn-secondary\" (click)=\"removeIngredient(i)\">\n                        <span class=\"glyphicon glyphicon-trash\" aria-hidden=\"true\"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n    </div>\n    <hr>\n    <h2>Directions</h2>\n    <div class=\"form-row\">\n        <div class=\"form-group\">\n            <textarea class=\"form-control\" formControlName=\"directions\" id=\"inputDirections\" rows=\"3\"></textarea>\n        </div>\n    </div>\n    <div class=\"form-row\">\n        <button type=\"submit\" class=\"btn btn-success btn-lg button-mrgn\" style=\"margin-left: 0;\">\n            Submit\n        </button>\n        <button type=\"button\" (click)=\"removeRecipe();\" class=\"btn btn-warning btn-lg button-mrgn\">\n            Delete Recipe\n        </button>\n        <a routerLink=\"/recipes\">\n            <button type=\"button\" class=\"btn btn-secondary btn-lg button-mrgn\">\n                Cancel\n            </button>\n        </a>\n    </div>\n</form>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { RecipesComponent } from './recipes/recipes.component';\nimport { HeaderComponent } from './header/header.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { HomepageComponent } from './homepage/homepage.component';\nimport { KitchenComponent } from './kitchen/kitchen.component';\nimport { CalendarComponent } from './calendar/calendar.component';\nimport { RecipeItemComponent } from './recipes/recipe-item/recipe-item.component';\nimport { RecipeItemEditComponent } from './recipes/recipe-item-edit/recipe-item-edit.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { LoginComponent } from './login/login.component';\nimport { RecipeItemAddComponent } from './recipes/recipe-item-add/recipe-item-add.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    RecipesComponent,\n    HeaderComponent,\n    HomepageComponent,\n    KitchenComponent,\n    CalendarComponent,\n    RecipeItemComponent,\n    RecipeItemEditComponent,\n    SignupComponent,\n    LoginComponent,\n    RecipeItemAddComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { Ingredient } from '../models/Ingredient'\nimport { environment } from '../../../environments/environment';\nimport { Observable } from 'rxjs';\n// no need to async or unsubscribe with first\nimport { catchError, first } from 'rxjs/operators';\nimport { ErrorHandlerService } from './error-handler.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IngredientHttpService {\n  private url = environment.baseUrl + \"api/ingredient\";\n  // private url = \"http://localhost:4100/api/ingredient/addIngredient\";\n\n  httpOptions: { headers: HttpHeaders } = {\n    headers: new HttpHeaders({ \"Content-Type\": \"application/json\" })\n  };\n\n  constructor(private http: HttpClient,\n    private errorHandlerService: ErrorHandlerService) { }\n\n  addIngredient(ingredient: Omit<Ingredient, \"id\">): Observable<Ingredient> {\n    return this.http.post<Ingredient>(`${this.url}/addIngredient`, ingredient, this.httpOptions)\n      .pipe(\n        first(),\n        catchError(this.errorHandlerService.handleError<Ingredient>('addIngredient'))\n      );\n  }\n\n  updateIngredient(ingredient: Ingredient ): Observable<Ingredient> {\n    return this.http.patch<Ingredient>(`${this.url}/${ingredient.id}`, ingredient, this.httpOptions)\n      .pipe(\n        first(),\n        catchError(this.errorHandlerService.handleError<Ingredient>('updateIngredient'))\n      );\n  }\n\n  deleteIngredient(ingredientId:number): Observable<any> {\n    return this.http.delete<any>(`${this.url}/${ingredientId}`, this.httpOptions)\n    .pipe(\n      first(),\n      catchError(this.errorHandlerService.handleError<any>('deleteIngredient'))\n    )\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<nav class=\"navbar navbar-default\">\n  <div class=\"container-fluid\">\n    <div class=\"navbar-header\">\n      <a routerLink=\"\" class=\"navbar-brand\">eGrocery</a>\n    </div>\n\n    <div class=\"collapse navbar-collapse\">\n      <ul class=\"nav navbar-nav\">\n        <li routerLinkActive=\"active\"><a routerLink=\"/recipes\">Recipes</a></li>\n        <li routerLinkActive=\"active\"><a routerLink=\"/kitchen\">Kitchen</a></li>\n        <li routerLinkActive=\"active\"><a routerLink=\"/calendar\">Calendar</a></li>\n      </ul>\n      <ul class=\"nav navbar-nav navbar-right\">\n       <li routerLinkActive=\"active\"><a routerLink=\"/login\">Log in</a></li>\n        <li routerLinkActive=\"active\"><a routerLink=\"/signup\">Sign up</a></li> \n      </ul>\n    </div>\n  </div>\n</nav>\n","import { Component, OnInit } from '@angular/core';\n\nimport { RecipeHttpService } from '../shared/services/recipe.service'\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { MealService } from '../shared/services/meal.service';\nimport { Meal } from '../shared/models/meal.model';\nimport { Recipe } from '../shared/models/recipe.model';\n\n@Component({\n  selector: 'app-recipes',\n  templateUrl: './recipes.component.html',\n  styleUrls: ['./recipes.component.css']\n})\nexport class RecipesComponent implements OnInit {\n  mealSelected: Meal;\n  meals: Meal[];\n  allRecipes: any;\n\n  constructor(\n    private mealService: MealService,\n    private router: Router,\n    private recipeHttpService: RecipeHttpService,\n    private activeRoute: ActivatedRoute\n  ) { }\n\n  ngOnInit(): void {\n    this.allRecipes = this.activeRoute.snapshot.data.message[0];\n    \n    this.mealService.resetMeals();\n    this.mealService.mealSelected = this.mealService.meals[0];\n\n    for (const currentRecipe of this.allRecipes) {\n      if (currentRecipe.category.toLowerCase() === 'breakfast') {\n        this.mealService.meals[0].recipes.push(\n          new Recipe(\n            currentRecipe.recipe_name, \n            currentRecipe.category,\n            [], \n            currentRecipe.instruction, \n            currentRecipe.satisfaction,\n            currentRecipe.recipe_id\n          )\n        );\n      } else if (currentRecipe.category.toLowerCase() === 'lunch') {\n        this.mealService.meals[1].recipes.push(\n          new Recipe(\n            currentRecipe.recipe_name,\n            currentRecipe.category, \n            [], \n            currentRecipe.instruction, \n            currentRecipe.satisfaction,\n            currentRecipe.recipe_id\n          )\n        );\n      } else if (currentRecipe.category.toLowerCase() === 'dinner') {\n        this.mealService.meals[2].recipes.push(\n          new Recipe(\n            currentRecipe.recipe_name, \n            currentRecipe.category,\n            [], \n            currentRecipe.instruction, \n            currentRecipe.satisfaction,\n            currentRecipe.recipe_id\n          )\n        );\n      } else if (currentRecipe.category.toLowerCase() === 'dessert') {\n        this.mealService.meals[3].recipes.push(\n          new Recipe(\n            currentRecipe.recipe_name, \n            currentRecipe.category,\n            [], \n            currentRecipe.instruction, \n            currentRecipe.satisfaction,\n            currentRecipe.recipe_id\n          )\n        );\n      } else {\n        console.error(`Missing category or invalid currentRecipe: ${JSON.stringify(currentRecipe)}`);\n      }\n    }\n\n    this.meals = this.mealService.getMeals();\n    this.mealSelected = this.mealService.mealSelected;\n  }\n\n  recipeSelected(recipe: Recipe) {\n    // this.recipeService.recipeSelected = recipe;\n    this.router.navigate(['/recipe-item', recipe.recipeId]);\n\n  }\n\n  onMealSelect(idx: number){\n    this.mealSelected = this.meals[idx];\n  }\n}\n\n/*\n\n--- Raw Data Output from Recipes.getAll() ---\n\n(2) [Array(11), Array(6)]\n0: Array(11)\n0: {recipe_id: 100, recipe_name: \"Cereal\", instruction: \"Pour cereal and milk into bowl\", category: \"breakfast\", satisfaction: 3, …}\n1: {recipe_id: 101, recipe_name: \"Eggs\", instruction: \"Scramble eggs in bowl and mix with milk and salt\", category: \"breakfast\", satisfaction: 4, …}\n2: {recipe_id: 102, recipe_name: \"Toast\", instruction: \"Toast bread then smear butter or jam on it\", category: \"breakfast\", satisfaction: 5, …}\n3: {recipe_id: 103, recipe_name: \"BLT\", instruction: \"Toast bread, add bacon, lettuce, tomato and mayo\", category: \"lunch\", satisfaction: 5, …}\n4: {recipe_id: 104, recipe_name: \"Cheeseburger\", instruction: \"Cook ground beef in patty form, place on bun with cheese and other toppings\", category: \"lunch\", satisfaction: 5, …}\n5: {recipe_id: 105, recipe_name: \"Salad\", instruction: \"Mix green and toppings then dress with salad dressing and croutons\", category: \"lunch\", satisfaction: 2, …}\n6: {recipe_id: 106, recipe_name: \"Spaghetti\", instruction: \"Boil pasta then top with sauce and cheese\", category: \"dinner\", satisfaction: 4, …}\n7: {recipe_id: 107, recipe_name: \"Steak and potatoes\", instruction: \"Sear steak in pan and roast potatoes\", category: \"dinner\", satisfaction: 5, …}\n8: {recipe_id: 108, recipe_name: \"Mac n' Cheese\", instruction: \"Boil macaroni then mix with cheese sauce\", category: \"dinner\", satisfaction: 5, …}\n9: {recipe_id: 109, recipe_name: \"Ice cream\", instruction: \"Mix and freeze cream\", category: \"dessert\", satisfaction: 5, …}\n10: {recipe_id: 110, recipe_name: \"Cake\", instruction: \"Bake cake batter\", category: \"dessert\", satisfaction: 5, …}\nlength: 11\n__proto__: Array(0)\n1: (6) [{…}, {…}, {…}, {…}, {…}, {…}]\nlength: 2\n__proto__: Array(0)\n\n*/\n","<!-- <app-recipe-item [myRecipe]=\"testRecipe\"></app-recipe-item> -->\n<div class=\"jumbotron bg-keylime\">\n  <h1>My Recipes</h1>\n</div>\n\n<a routerLink=\"/recipe-add\">\n  <button type=\"button\" class=\"btn btn-secondary btn-lg mrgn-bottom\">\n    <span class=\"glyphicon glyphicon-plus\" aria-hidden=\"true\"></span> Add Recipe \n  </button>\n</a>\n\n<div class=\"row\">\n  <div class=\"col-md-5\">\n    <ul class=\"nav nav-pills nav-stacked\">\n      <li role=\"presentation\" (click)=\"onMealSelect(0)\" [ngClass]=\"{'active':mealSelected.name === 'Breakfast'}\"><a>Breakfast</a></li>\n      <li role=\"presentation\" (click)=\"onMealSelect(1)\" [ngClass]=\"{'active':mealSelected.name === 'Lunch'}\"><a>Lunch</a></li>\n      <li role=\"presentation\" (click)=\"onMealSelect(2)\" [ngClass]=\"{'active':mealSelected.name === 'Dinner'}\"><a>Dinner</a></li>\n      <li role=\"presentation\" (click)=\"onMealSelect(3)\" [ngClass]=\"{'active':mealSelected.name === 'Dessert'}\"><a>Dessert</a></li>\n    </ul>\n  </div>\n  <div class=\"col-md-7\">\n    <ul class=\"list-group\">\n      <li *ngFor=\"let recipe of mealSelected.recipes\" (click)=\"recipeSelected(recipe)\" class=\"list-group-item\">{{ recipe.name }}</li>\n    </ul>\n  </div>\n</div>","import { Injectable } from '@angular/core';\n\nimport { Observable, of } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ErrorHandlerService {\n// Operation = httpRequest, etc. \n// T = any type\n// Function console logs any error messages about requests\n  handleError<T>(operation = \"operation\", result?: T){\n    return (error:any): Observable<T> => {\n      console.log(`${operation} failed: ${error.message}`);\n      return of(result as T);\n    }\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n\nimport { AuthService } from 'src/app/shared/services/auth.service';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n  signupForm: FormGroup;\n\n  constructor(private authService: AuthService) { }\n\n  ngOnInit(): void {\n    this.signupForm = this.createFormGroup();\n  }\n\n  createFormGroup(): FormGroup {\n    return new FormGroup ({\n      name: new FormControl(\"\", [Validators.required, Validators.minLength(2)]),\n      email: new FormControl(\"\", [Validators.required, Validators.email]),\n      password: new FormControl(\"\", [Validators.required, Validators.minLength(7)])\n\n    })\n  }\n\n  signup(): void {\n    // console.log(this.signupForm.value);\n    this.authService\n    .signup(this.signupForm.value)\n    .subscribe((msg) => console.log(msg));\n  }\n}\n","<div class=\"row\">\n    <div class=\"col-md-4 col-md-offset-4\">\n      <div class=\"thumbnail no-border\">\n          <img src=\"assets/images/cook.svg\" alt=\"hello\">\n      </div>\n    </div>\n</div>\n<div class=\"row mrgn-bottom\">\n    <div class=\"col-md-6 col-md-offset-3\">\n        <h1>Sign Up</h1>\n        <form [formGroup]=\"signupForm\" (ngSubmit)=\"signup()\" novalidate>\n            <div class=\"form-group\">\n              <label for=\"name\">Name</label>\n              <input type=\"text\" class=\"form-control\" placeholder=\"ex. Pat\" formControlName=\"name\">\n            </div>\n            <div class=\"form-group\">\n              <label for=\"email\">Email</label>\n              <input type=\"email\" class=\"form-control\" placeholder=\"ex. pat.lastname@myemail.com\" formControlName=\"email\">\n            </div>\n            <div class=\"form-group\">\n                <label for=\"passwordCheck\">Password</label>\n                <input type=\"password\" class=\"form-control\" formControlName=\"password\">\n              </div>\n            <button type=\"submit\" class=\"btn btn-success\" [disabled]=\"!signupForm.valid\">Submit</button>\n          </form>\n    </div>\n</div>\n\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { environment } from '../../../environments/environment';\nimport { Observable } from 'rxjs';\n// no need to async or unsubscribe with first\nimport { catchError, first } from 'rxjs/operators';\nimport { ErrorHandlerService } from './error-handler.service';\nimport { Recipe } from '../models/recipe.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RecipeHttpService {\n  recipeSelected: Recipe;\n  private url = environment.baseUrl + \"api/recipe\";\n\n  httpOptions: { headers: HttpHeaders } = {\n    headers: new HttpHeaders({ \"Content-Type\": \"application/json\" })\n  };\n\n  constructor(\n    private http: HttpClient,\n    private errorHandlerService: ErrorHandlerService\n  ) { }\n\n  addRecipe(recipe: Omit<Recipe, \"id\">): Observable<Recipe> {\n    return this.http.post<Recipe>(`${this.url}/addRecipe`, recipe, this.httpOptions)\n      .pipe(\n        first(),\n        catchError(this.errorHandlerService.handleError<Recipe>('addRecipe'))\n      );\n  }\n\n  getAll(userId: number): Observable<any> {\n    return this.http.get<any>(`${this.url}/${userId}`, this.httpOptions)\n      .pipe(\n        first(),\n        catchError(this.errorHandlerService.handleError<any>('getAll'))\n      );\n  }\n\n  getOne(recipeId: number): Observable<any> {\n    return this.http.get<any>(`${this.url}/getOne/${recipeId}`, this.httpOptions)\n      .pipe(\n        first(),\n        catchError(this.errorHandlerService.handleError<any>('getOne'))\n      );\n  }\n\n  update(recipe: Recipe ): Observable<Recipe> {\n    return this.http.patch<Recipe>(`${this.url}/${recipe.recipeId}`, recipe, this.httpOptions)\n      .pipe(\n        first(),\n        catchError(this.errorHandlerService.handleError<Recipe>('update'))\n      );\n  }\n\n  delete(recipeId: number):  Observable<any> {\n    return this.http.delete<any>(`${this.url}/${recipeId}`, this.httpOptions)\n      .pipe(\n        first(),\n        catchError(this.errorHandlerService.handleError<any>('delete'))\n      );\n  }\n}\n","export class Ingredient {\n  public ingredient_id: number;\n  public name: string;\n  public quantity: number;\n  public category: string;\n  public unit: string;\n\n  constructor(id: number, name: string, quantity: number, unit: string, category: string) {\n    this.ingredient_id = id;\n    this.name = name;\n    this.quantity = quantity;\n    this.unit = unit;\n    this.category = category;\n  }\n}","\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { CalendarComponent } from './calendar/calendar.component';\nimport { HomepageComponent } from './homepage/homepage.component';\nimport { KitchenComponent } from './kitchen/kitchen.component';\nimport { RecipesComponent } from './recipes/recipes.component';\nimport { RecipeItemEditComponent } from './recipes/recipe-item-edit/recipe-item-edit.component';\nimport { LoginComponent } from './login/login.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { RecipeItemComponent } from './recipes/recipe-item/recipe-item.component';\nimport { RecipeItemAddComponent } from './recipes/recipe-item-add/recipe-item-add.component';\nimport { RecipeResolver } from './shared/resolver/recipe.resolver';\nimport { RecipeItemResolver } from './shared/resolver/recipe-item.resolver';\nimport { KitchenResolver } from './shared/resolver/kitchen.resolver';\nimport { EventResolver } from './shared/resolver/event.resolver';\n\nconst appRoutes: Routes = [\n  { path: '', component: HomepageComponent, pathMatch: 'full' },\n  { path: 'recipes', component: RecipesComponent, resolve: { message: RecipeResolver } },\n  { path: 'kitchen', component: KitchenComponent, resolve: { message: KitchenResolver } },\n  { path: 'calendar', component: CalendarComponent, resolve: { message: EventResolver } },\n  { path: 'recipe-item/:id', component: RecipeItemComponent, resolve: { message: RecipeItemResolver } },\n  { path: 'recipe-edit/:id', component: RecipeItemEditComponent, resolve: { message: RecipeItemResolver } },\n  { path: 'recipe-add', component: RecipeItemAddComponent },\n  { path: 'login', component: LoginComponent },\n  { path: 'signup', component: SignupComponent },\n  { path: '**', redirectTo: '' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(appRoutes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n\n}","import { Component, OnInit } from '@angular/core';\n\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { EventService } from 'src/app/shared/services/event.service';\n\n@Component({\n  selector: 'app-recipe-item',\n  templateUrl: './recipe-item.component.html',\n  styleUrls: ['./recipe-item.component.css']\n})\nexport class RecipeItemComponent implements OnInit {\n  recipeItem: any;\n  daysOfWeek: string[] = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n\n  constructor(\n    private router: Router,\n    private activeRoute: ActivatedRoute,\n    private eventService: EventService\n  ) { }\n\n  ngOnInit(): void {\n    this.recipeItem = this.formatRecipeItem(this.activeRoute.snapshot.data.message[0]);\n  }\n\n  goToEdit(recipeId: number): void {\n    console.log(recipeId)\n    console.log(this.recipeItem)\n    this.router.navigate(['/recipe-edit', recipeId]);\n  }\n\n  // Upon completion of GET call to API, the results are formatted so the page may be displayed\n  formatRecipeItem(recipeItem) {\n    if (recipeItem) {\n      return recipeItem.reduce((recipe, curr) => {\n        const newIngredient = {\n          ingredient_id: curr.ingredient_id,\n          ingredient_name: curr.ingredient_name,\n          category: curr.category,\n          quantity: curr.quantity,\n          unit: curr.unit,\n        }\n        recipe.ingredients.push(newIngredient);\n        return recipe;\n      }, {\n        recipe_id: recipeItem[0].recipe_id,\n        recipe_name: recipeItem[0].recipe_name,\n        satisfaction: recipeItem[0].satisfaction,\n        // FIX ME\n        // category: recipeItem[0].recipe_category,\n        instruction: recipeItem[0].instruction,\n        user_id: recipeItem[0].user_id,\n        ingredients: []\n      })\n    }\n  }\n\n  onAddCalendar() {\n    console.log(this.recipeItem);\n    const day = this.daysOfWeek[Math.floor(Math.random() * this.daysOfWeek.length)];\n    this.eventService\n      .addEventRecipe(this.recipeItem.recipe_id, this.recipeItem.user_id, day)\n      .subscribe((msg) => {\n        alert(`${this.recipeItem.recipe_name} has been added to ${day}!`);\n      });\n  }\n}\n","<div class=\"jumbotron bg-keylime\">\n  <h1>{{ recipeItem.recipe_name }}</h1>\n</div>\n\n<button \n  type=\"button\" \n  (click)=\"goToEdit(recipeItem.recipe_id)\" \n  class=\"btn btn-success btn-lg button-mrgn\"\n  style=\"margin-left: 0;\">\n    <span class=\"glyphicon glyphicon-pencil\" aria-hidden=\"true\"></span> Edit Recipe\n</button>\n\n<button type=\"button\" class=\"btn btn-secondary btn-lg button-mrgn\" (click)=\"onAddCalendar()\">\n  <span class=\"glyphicon glyphicon-plus\" aria-hidden=\"true\"></span> Add To Calendar \n</button>\n\n<br>\n\n<h2 class=\"heading-float\">Ingredients</h2>\n<ul class=\"list-group\">\n  <li class=\"list-group-item\" *ngFor=\"let ingredient of recipeItem.ingredients\">\n    {{ ingredient.quantity }} {{ ingredient.unit }} {{ ingredient.ingredient_name }}\n  </li>\n</ul>\n<h2 class=\"heading-float\">Directions</h2>\n<div class=\"panel panel-default mrgn-bottom\">\n  <div class=\"panel-body\">\n    {{ recipeItem.instruction }}\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>Login works!</p>\n<!-- <div class=\"row\">\n    <div class=\"col-md-4 col-md-offset-4\">\n      <div class=\"thumbnail no-border\">\n          <img src=\"assets/images/chef.svg\" alt=\"hello\">\n      </div>\n    </div>\n</div>\n<div class=\"row mrgn-bottom\">\n    <div class=\"col-md-6 col-md-offset-3\">\n        <h1>Log in</h1>\n        <form>\n            <div class=\"form-group\">\n              <label for=\"exampleInputEmail1\">Username</label>\n              <input type=\"text\" class=\"form-control\">\n            </div>\n            <div class=\"form-group\">\n              <label for=\"exampleInputPassword1\">Password</label>\n              <input type=\"password\" class=\"form-control\">\n            </div>\n            <button type=\"submit\" class=\"btn btn-success\">Submit</button>\n          </form>\n    </div>\n</div> -->\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}